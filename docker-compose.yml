services:
  # postgres:
  #   image: postgres:16
  #   container_name: kukan-postgres
  #   restart: always
  #   environment:
  #     POSTGRES_USER: kukan_user
  #     POSTGRES_PASSWORD: kukan_pass
  #     POSTGRES_DB: kukan_db
  # ports:
  #   - "5432:5432"
  # volumes:
  #   - pgdata:/var/lib/postgresql/data
  # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  frontend:
    build:
      context: ./frontend
    container_name: kukan-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: npm run build

  backend:
    build:
      context: ./backend
    container_name: kukan-backend
    ports:
      - "8080:8080"
    working_dir: /app
    command: node ws-server.js

  nginx:
    build:
      context: ./nginx
    container_name: kukan-nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

# --- frontend/Dockerfile ---
# FROM node:20-alpine
# WORKDIR /app
# COPY . .
# RUN npm install && npm run build

# --- backend/Dockerfile ---
# FROM node:20-alpine
# WORKDIR /app
# COPY . .
# RUN npm install
# CMD ["node", "ws-server.js"]

# --- nginx/Dockerfile ---
# FROM nginx:alpine
# COPY default.conf /etc/nginx/conf.d/default.conf

# --- nginx/default.conf ---
# server {
#   listen 80;
#   server_name localhost;

#   location / {
#     root /usr/share/nginx/html;
#     index index.html;
#     try_files $uri $uri/ /index.html;
#   }

#   location /ws/ {
#     proxy_pass http://backend:8080;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "Upgrade";
#     proxy_set_header Host $host;
#   }
# }
